<?php
/**
 * Created by PhpStorm.
 * User: 老王专用
 * Date: 2019/5/31
 * Time: 22:07
 */

namespace app\api\model;


use think\Model;

class BaseModel extends Model
{
    protected $user_id = 1;
    protected function  prefixImgUrl($value){
        $finalUrl = $value;
        $fromCome = substr($value,0,4);
        if ($fromCome != 'http') {
            $finalUrl = config('setting.img_prefix') . $value;
        }
        return $finalUrl;
    }

    public function getList($condition = [], $page = 1, $limit = 10, $orderBy = '', $toArray = false) {
        if ($condition) {
            $this->where($condition);
        }

        if (!empty($page)) {
            $this->page($page)->limit($limit);
        }

        if (!empty($orderBy)) {
            $this->order($orderBy);
        }

        if ($toArray) {
            return $this->select()->toArray();
        } else {
            return $this->select();
        }
    }

    public function getOne($condition = [], $toArray = false) {
        if (!empty($condition)) {
            $this->where($condition);
        }

        if ($toArray) {
            return $this->find()->toArray();
        } else {
            return $this->find();
        }
    }

    public function insert(array $data = [], $replace = false, $getLastInsID = false, $sequence = null)
    {
        return parent::insert($data, $replace, $getLastInsID, $sequence); // TODO: Change the autogenerated stub
    }

    public function insertAll(array $dataSet, $replace = false, $limit = null)
    {
        return parent::insertAll($dataSet, $replace, $limit); // TODO: Change the autogenerated stub
    }

    public function selectCount($condition = []) {
        if (!empty($condition)) {
            $this->where($condition);
        }
        return $this->count()['total'];
    }

    public function updateData($data) {
        return self::update($data);
    }
}